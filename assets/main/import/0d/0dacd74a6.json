[1,["24Bifl/6lHDoQeBBoYdJiH@f9941","aaI4fs9ftFvZWBeH5KCwl7@f9941","91Iav7Z/xO76p3mC09SznK","e89x1Vxc5AOqzjbBgABPmZ@f9941","28kZ1vYQpA7qTCY9L+7UwI@f9941","d7NMdMYwhOqIdToVMJZxwC@f9941","7793enn6FA8L0YbDXp4WCi@f9941","9dhiq5l+VGd4SAvfaheqPK@f9941","cfhVOPRnxCJJvscW3x7iQl@f9941","1e/4yAVe5L/pT4TAnkWRfn@6c48a","e1Ynh98J1MB41O5aOZq5tv","2e7MA27aFFcors65pzZh4S@f9941","1e/4yAVe5L/pT4TAnkWRfn@f9941","214XJ1AI1DHYk04HxW44ur","d1AVzFhplI74ClIotls/zr@f9941","f2rFwAjPpCxqxh9ghSf5dB@f9941","2e7MA27aFFcors65pzZh4S@6c48a","7793enn6FA8L0YbDXp4WCi@6c48a","9dhiq5l+VGd4SAvfaheqPK@6c48a","aaI4fs9ftFvZWBeH5KCwl7@6c48a","d1AVzFhplI74ClIotls/zr@6c48a","59AvveDtdH5ou1TJ61J2Tx","e89x1Vxc5AOqzjbBgABPmZ@6c48a","f2rFwAjPpCxqxh9ghSf5dB@6c48a"],["node","_spriteFrame","_textureSource","_normalSprite","image","_font","_parent","root","data","contentNode","backButton","_target","_customMaterial","map","mapSprite","locked","mapImage","selectionBorder","votesCount","mapName","_checkMark","target","sprite","_effectAsset"],[["cc.Node",["_name","_layer","_active","_components","_prefab","_parent","_lpos","_children","_lscale","_lrot","_euler"],0,9,4,1,5,2,5,5,5],"cc.SpriteFrame",["cc.Sprite",["_sizeMode","_type","_enabled","node","__prefab","_spriteFrame","_color","_customMaterial"],0,1,4,6,5,6],["cc.Widget",["_alignFlags","_bottom","_originalWidth","_left","_top","_originalHeight","_right","_enabled","node","__prefab"],-5,1,4],["cc.Button",["_transition","node","__prefab","_normalSprite","clickEvents","_target"],2,1,4,6,9,1],["cc.Node",["_name","_layer","_parent","_components","_prefab","_children","_lpos"],1,1,12,4,2,5],["cc.ClickEvent",["_componentId","handler","customEventData","target"],0,1],["cc.Label",["_string","_actualFontSize","_lineHeight","_isSystemFontUsed","_fontSize","node","__prefab","_font"],-2,1,4,6],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["MapButtonPropType",["mapType","name","isLocked","image"],0,6],["cc.Mask",["_type","_alphaThreshold","node","__prefab"],1,1,4],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["31ac8YGFVpOx4lAQSnP/KOY",["node","__prefab","backButton","contentNode","allMaps","map","mapSprite"],3,1,4,1,1,9,6,6],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.Layout",["_resizeMode","_layoutType","_startAxis","_paddingLeft","_paddingRight","_paddingTop","_spacingX","_constraint","_constraintNum","_affectedByScale","node","__prefab","_cellSize"],-7,1,4,5],["cc.ToggleContainer",["node","__prefab","checkEvents"],3,1,4,9],["230e0GNjxdI/YRi5dbByCXa",["node","__prefab"],3,1,4],["cc.ScrollView",["bounceDuration","brake","vertical","node","__prefab","_content"],0,1,4,1],["e138d8oocxHJouNorRctvVs",["node","__prefab","mapName","votesCount","selectionBorder","mapImage","locked"],3,1,4,1,1,1,1,1],["cc.Toggle",["node","__prefab","_normalColor","_checkMark","_normalSprite"],3,1,4,5,1,6],["15935TqBalDoafi+JYS05pu",["node","__prefab","sprite"],3,1,4,1],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[12,0,2],[15,0,1,2,3,4,5,5],[8,0,1,2,1],[2,0,3,4,6,5,2],[9,0,1,2,3,4],[0,0,1,5,7,3,4,6,3],[0,0,1,5,3,4,6,3],[3,0,2,5,8,9,4],[3,0,1,8,9,3],[2,0,3,4,5,2],[11,0,2],[0,0,1,7,3,4,3],[0,0,1,5,3,4,6,9,10,3],[5,0,1,2,5,3,4,3],[5,0,1,2,3,4,6,3],[2,0,3,4,2],[4,1,2,4,3,1],[6,0,1,2,3,4],[6,0,1,3,3],[18,0,1,1],[7,0,1,4,2,3,5,6,7,6],[0,0,1,3,4,6,3],[0,0,2,1,7,3,4,4],[0,0,1,5,3,4,6,8,3],[0,0,1,5,7,3,4,3],[0,0,1,5,3,4,3],[0,0,1,5,7,3,4,6,8,3],[0,0,1,7,3,4,6,3],[0,0,1,5,3,4,8,3],[5,0,1,2,3,4,3],[8,0,1,2,3,1],[13,0,1,2,3,4,5,6,1],[9,0,1,3,3],[3,0,3,6,1,2,8,9,6],[3,0,8,9,2],[3,7,0,3,6,4,1,2,5,8,9,9],[3,0,3,4,1,8,9,5],[3,0,4,8,9,3],[14,0,1,1],[2,1,0,3,4,5,3],[2,3,4,1],[2,0,3,4,7,5,2],[2,3,4,5,1],[2,2,0,3,4,3],[4,0,1,2,4,5,3,2],[4,0,1,2,4,3,2],[4,1,2,3,1],[6,3,1],[16,0,1,2,3,4,5,6,7,8,9,10,11,12,11],[17,0,1,2,1],[10,0,1,2,3,3],[10,0,2,3,2],[7,0,1,4,2,3,5,6,6],[7,0,1,2,3,5,6,5],[19,0,1,2,3,4,5,4],[20,0,1,2,3,4,5,6,1],[21,0,1,2,3,4,1],[22,0,1,2,1],[23,0,1,2,3,5],[24,0,1,2,3,4]],[[[{"name":"mapScrollMask","rect":{"x":0,"y":0,"width":278,"height":109},"offset":{"x":0,"y":0},"originalSize":{"width":278,"height":109},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-139,-54.5,0,139,-54.5,0,-139,54.5,0,139,54.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,109,278,109,0,0,278,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-139,"y":-54.5,"z":0},"maxPos":{"x":139,"y":54.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[9]],[[[10,"MapSelection"],[11,"MapSelection",33554432,[-8,-9,-10,-11,-12],[[2,-2,[0,"a0xz6u7A5OEZHyQQQRu6+K"],[5,1920,1080]],[31,-5,[0,"ddxFSvryBB7qT+nRegXY7c"],-4,-3,[[32,1,"Map1",12],[4,2,"Map2",true,13],[4,3,"Map3",true,14],[4,1,"Map4",true,15],[4,2,"Map5",true,16],[4,3,"Map6",true,17]],10,11],[7,45,1920,1080,-6,[0,"2fvWSJy/ZEfJImA/rYmuBK"]],[38,-7,[0,"ad8s9sWhFO7JNHPfwqwmMf"]]],[1,"9eUiipEdhEV4FdW7OLey3y",null,null,null,-1,0]],[5,"confirmMap",33554432,1,[-18],[[2,-13,[0,"ccNX6FVa1EK4MttYC/+82G"],[5,256,120]],[39,2,0,-14,[0,"85EvE1JExJqr8vcByq1FmH"],5],[44,3,-16,[0,"edgBP0SKRPnYbHWpFwJIrK"],[[17,"31ac8YGFVpOx4lAQSnP/KOY","submitButtonPressed","Map Not Selected!!",1]],-15,6],[33,36,1488.2240000000002,30,30,415,-17,[0,"0dNjBeWm5Jdq8PIJty7gMH"]]],[1,"9ftxpGNQhE446cw6KFhgPe",null,null,null,1,0],[1,802,-450,0]],[21,"content",33554432,[[30,-19,[0,"fdqpDSiB5KiJxiHsGK3Jo3"],[5,100,850],[0,0,0.5]],[48,1,3,1,50,50,10,-200,1,1,true,-20,[0,"69m3C8vltK75SbSYVYhStV"],[5,397,407]],[49,-21,[0,"d497aFGXpKhJ4mdBhkc9nW"],[[18,"31ac8YGFVpOx4lAQSnP/KOY","toggleCallback",1]]],[34,8,-22,[0,"a6BCkkYI1F+K8Vv/YJKQlH"]]],[1,"f7MIqUpuRG4L/bZaXg75W5",null,null,null,1,0],[1,-1167.6,0,0]],[22,"fogshader",false,33554432,[-27],[[2,-23,[0,"7fJIXfSmVGGK3iD+GhE5xg"],[5,1920,1920]],[35,false,18,910,910,490,490,100,100,-24,[0,"07/LY8H+NIjaZGXYJ41uMf"]],[40,-25,[0,"426/TUpPBEoJnGo+KtaGmG"]],[19,-26,[0,"7aaC42Ld1PNZDpv00giEry"]]],[1,"f44NbKVXVAorTFXeApP+EY",null,null,null,1,0]],[23,"backButton",33554432,1,[[2,-28,[0,"b89XfbkvZJZJjFYiWWHYBy"],[5,78,76]],[9,2,-29,[0,"c8/5PVRfxF07wWXiTP0i7z"],7],[45,3,-30,[0,"2bAjXHdglMc7Rzg89/wjX6"],[[18,"31ac8YGFVpOx4lAQSnP/KOY","backButtonPressed",1]],8],[36,12,30,953.971,30,-31,[0,"59wjVUzwdH4Je8mFg1lbAq"]]],[1,"2aJ612RJNGy55ygYxd0p5K",null,null,null,1,0],[1,-881.25,-462.5,0],[1,-1.25,1.25,1]],[24,"background",33554432,1,[4],[[2,-32,[0,"59EkMN8nNNnJVew0pNkYBY"],[5,1920,1920]],[3,2,-33,[0,"6axBygCotAJY+nSva5bQUq"],[4,4290609761],2],[19,-34,[0,"2er/1OsyFEIKKBxUH0ZMxd"]]],[1,"8fYe04xa1FkL9M3BeVc+M1",null,null,null,1,0]],[11,"view",33554432,[3],[[2,-35,[0,"d95Lt/D1JG2rVfUTbqk8lT"],[5,2335.2,915.6]],[50,3,0,-36,[0,"21c+0DWJ1E47nSBIuOlotX"]],[9,0,-37,[0,"41I1EL87tIj5Mkva2zPQ3S"],9]],[1,"730ax3uTJPQI2MGD3eiKiq",null,null,null,1,0]],[25,"FogSprite",33554432,4,[[2,-38,[0,"14BUoZCU1NoolazgK2F7zn"],[5,1920,1920]],[41,0,-39,[0,"80XGnLwEFOB4NPnt1fJ/mp"],0,1],[7,45,100,100,-40,[0,"f6BI044WVIf62YQW350XKf"]]],[1,"4adF4sw5BJEJR3++Sey/un",null,null,null,1,0]],[6,"heading",33554432,1,[[2,-41,[0,"5cpbdLG7hIer2sZ4KF2CT9"],[5,484.39996337890625,138.6]],[20,"MAP SELECTION",100,100,110,false,-42,[0,"31qJCVAqJJpreut6N+bP21"],3],[37,1,125,-43,[0,"0eWEhRhY5GMZ90aPzJjiCs"]]],[1,"d2F6n9YshN5rAYCBu0c3sJ",null,null,null,1,0],[1,0,345.7,0]],[26,"mapScrollView",33554432,1,[7],[[2,-44,[0,"beN0yp3ElLIa+luCPaLF/l"],[5,2335.2,915.6]],[54,0.23,0.75,false,-45,[0,"6byfsg8sxC97MREt0Wgv3W"],3]],[1,"2fga22n2dCw7YojLsVgEIK",null,null,null,1,0],[1,2.918,0,0],[1,0.7,0.7,1]],[6,"Label",33554432,2,[[2,-46,[0,"d8hW9QXZdIiJdgjHR+UORN"],[5,173.0399169921875,113.4]],[20,"Confirm",60,60,90,false,-47,[0,"74RCvAKCVLX6BhOOxSZchX"],4]],[1,"f9yfg4uM1JbbZ1+fPtuKwr",null,null,null,1,0],[1,0,-1.693,0]]],0,[0,7,1,0,0,1,0,9,3,0,10,5,0,0,1,0,0,1,0,0,1,0,-1,6,0,-2,9,0,-3,2,0,-4,5,0,-5,10,0,0,2,0,0,2,0,11,2,0,0,2,0,0,2,0,-1,11,0,0,3,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,4,0,-1,8,0,0,5,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,8,1,3,6,7,4,6,6,7,6,10,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[12,1,1,5,5,1,3,1,3,1,13,14,4,4,4,4,4,4],[10,0,11,2,2,4,4,5,5,12,13,1,14,6,1,1,1,1]],[[[10,"mapButton"],[27,"mapButton",33554432,[-15,-16,-17,-18,-19,-20],[[2,-2,[0,"f6q7VrJmdKSJ7anLE8g+C/"],[5,710,840]],[55,-8,[0,"a8ZbK54YBLhKhCq6snEBn7"],-7,-6,-5,-4,-3],[56,-10,[0,"8b4i/RpFlHy6TY/cCY9Tw0"],[4,4292269782],-9,8],[51,3,-11,[0,"1bfay1g+hBTKc0qtlHTIAG"]],[9,0,-12,[0,"35OYJxRihFdYj6SCJ38NHH"],9],[16,-14,[0,"6b3iah9XNBXr8d+6RIvEVA"],[[47,-13]],10]],[1,"90/EQrmkVHBYlwLZni6hoD",null,null,null,-1,0],[1,0,-51,0]],[13,"locked",33554432,1,[-25],[[[2,-21,[0,"0crJnTh9BATYpVUKWH2Q0J"],[5,710,840]],-22,[7,45,40,36,-23,[0,"37O7nC685BaLJVSWcnA4qO"]],[46,-24,[0,"eaId892UpMA5euWQc9rE3b"],7]],4,1,4,4],[1,"eacjQV1gVFO6/TNfGYpnGw",null,null,null,1,0]],[5,"nameBase",33554432,1,[-29],[[2,-26,[0,"27432vTfhHdYdzd5mNEB5f"],[5,550,100]],[3,0,-27,[0,"74um5FzOZGbbnfCQPpqURv"],[4,4278190080],0],[8,4,45.46800000000002,-28,[0,"48zpFi5f1NpJzZpSyx0JIc"]]],[1,"89HKO4YytI2IVIelLhcML4",null,null,null,1,0],[1,-106.97,-324.532,0]],[13,"selectionBoder",33554432,1,[-32,-33],[[[2,-30,[0,"daHFeR7dpKjaFEEGm/FHF8"],[5,710,840]],-31],4,1],[1,"36vnglE0BBkpanczuwdMX8",null,null,null,1,0]],[5,"voteBase",33554432,1,[-37],[[2,-34,[0,"28SGNgVydNJ4p0JoHIWdww"],[5,550,50]],[3,0,-35,[0,"a3W/y7+nRL/ZrXV23OBipr"],[4,4278213036],4],[8,4,-1.7450000000000045,-36,[0,"896XYHkidHUKbh64gUKqcp"]]],[1,"ac3yI1ENZAPriVK5PET/HP",null,null,null,1,0],[1,-111.946,-396.745,0]],[29,"mapImage",33554432,1,[[[2,-38,[0,"c9ki3pZ9pOwqwrzYmzMxCq"],[5,1344,840]],-39,[57,-41,[0,"60YFrku7xLdLknrMKHSt7j"],-40]],4,1,4],[1,"94EXtfsKdHMq5R3pbmZ5uY",null,null,null,1,0]],[6,"topLine",33554432,4,[[2,-42,[0,"aeEzJuyHJAJrx0V8q8T4Js"],[5,550,20]],[3,0,-43,[0,"38YIU0fj1DkZNzS7HxqAln"],[4,4278213036],3],[8,4,820.028,-44,[0,"92e5l4RKRI9baPwnslOfez"]]],[1,"80Bs1Dd7dKqaLOgnnk0+R9",null,null,null,1,0],[1,102.738,410.028,0]],[28,"lock",33554432,2,[[2,-45,[0,"3e1UaxvBJIgJwmBLSi4IAc"],[5,163,253]],[42,-46,[0,"5aPRNuJ4ZEyK5izrBj5a33"],5],[16,-47,[0,"6bjK1v79VBoKcNBrCiHCZU"],[[17,"e138d8oocxHJouNorRctvVs","lockButtonCallBack","This map is locked.",1]],6]],[1,"7eY+H9hZxI/ITaSZ2a7G7l",null,null,null,1,0],[1,0.6,0.6,1]],[15,0,6,[0,"533Q1wfmFKqqMVAIm/otYM"]],[14,"mapName",33554432,3,[[[2,-48,[0,"dam2Nr90VFw6qrpFKwNiFu"],[5,181.7999725341797,138.6]],-49],4,1],[1,"5eYsU4ZEVP6ZBdocBT0K8+",null,null,null,1,0],[1,16.04200000000003,4.458000000000027,0]],[12,"rightLine",33554432,1,[[2,-50,[0,"33dwXw7hRHVZH/qU/XPON4"],[5,1000,20]],[3,0,-51,[0,"3cK0STq+RMlJcdxNtxjr6+"],[4,4278213036],1]],[1,"21P+Z6ZUVC5YTwdKwVrtYt",null,null,null,1,0],[1,228.519,2.107,0],[3,0,0,0.6016965365669511,0.798724782314494],[1,0,0,73.98300000000003]],[12,"leftLine",33554432,4,[[2,-52,[0,"f5EvYC0x9N9rp4Xwhjwr50"],[5,1000,20]],[3,0,-53,[0,"f3uND8Nx9MRps8U2iIZHQ5"],[4,4278213036],2]],[1,"747uerclVBzpbk4NUnCzVx",null,null,null,1,0],[1,-234.288,-23.762,0],[3,0,0,0.6016965365669511,0.798724782314494],[1,0,0,73.98300000000003]],[43,false,0,4,[0,"65WFeBzslHdakfmOiCx5i4"]],[14,"votes",33554432,5,[[[2,-54,[0,"7fJc3x2u5BMaVR8M1ruSl2"],[5,101.919921875,138.6]],-55],4,1],[1,"f7HhKHc7dEApYwTJZYdE4h",null,null,null,1,0],[1,16.04200000000003,4.458000000000027,0]],[52,"MAP 1",100,100,110,false,10,[0,"d3XvwfCpZIn6zqhC4Vc97+"]],[53,"0 Votes",40,110,false,14,[0,"9dH8Qo+21AnrGsFYzH2iQm"]],[15,0,2,[0,"a26QISxLdMUqPszOmC/CD+"]]],0,[0,7,1,0,0,1,0,15,17,0,16,9,0,17,13,0,18,16,0,19,15,0,0,1,0,20,13,0,0,1,0,0,1,0,0,1,0,21,1,0,0,1,0,-1,6,0,-2,3,0,-3,11,0,-4,4,0,-5,5,0,-6,2,0,0,2,0,-2,17,0,0,2,0,0,2,0,-1,8,0,0,3,0,0,3,0,0,3,0,-1,10,0,0,4,0,-2,13,0,-1,12,0,-2,7,0,0,5,0,0,5,0,0,5,0,-1,14,0,0,6,0,-2,9,0,22,9,0,0,6,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,10,0,-2,15,0,0,11,0,0,11,0,0,12,0,0,12,0,0,14,0,-2,16,0,8,1,55],[0,0,0,0,0,0,0,0,0,0,0,9,15,13,16,17],[1,1,1,1,1,1,3,3,3,1,3,1,5,1,5,1],[0,0,0,0,0,7,7,8,3,3,3,6,2,15,2,8]],[[{"name":"background8","rect":{"x":0,"y":0,"width":1920,"height":1920},"offset":{"x":0,"y":0},"originalSize":{"width":1920,"height":1920},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-960,-960,0,960,-960,0,-960,960,0,960,960,0],"indexes":[0,1,2,2,1,3],"uv":[0,1920,1920,1920,0,0,1920,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-960,"y":-960,"z":0},"maxPos":{"x":960,"y":960,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[16]],[[[58,"assets/res/2dfog",[{}],[{"hash":1838733419,"name":"assets/res/2dfog|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"u_resolution","type":14,"count":1}],"defines":[]},{"name":"FOGCONFIG","stageFlags":16,"binding":2,"members":[{"name":"fog_color","type":16,"count":1},{"name":"fog_size","type":13,"count":1},{"name":"fog_density","type":13,"count":1},{"name":"fog_xSpeed","type":13,"count":1},{"name":"fog_ySpeed","type":13,"count":1},{"name":"fog_amplitude","type":13,"count":1},{"name":"fog_sparse","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"u_resolution","type":14,"count":1}],"defines":[]},{"name":"FOGCONFIG","stageFlags":16,"binding":2,"members":[{"name":"fog_color","type":16,"count":1},{"name":"fog_size","type":13,"count":1},{"name":"fog_density","type":13,"count":1},{"name":"fog_xSpeed","type":13,"count":1},{"name":"fog_ySpeed","type":13,"count":1},{"name":"fog_amplitude","type":13,"count":1},{"name":"fog_sparse","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec2 uv0;\nlayout(std140) uniform ARGS{\n  vec2 u_resolution;\n};\nlayout(std140) uniform FOGCONFIG {\n  vec4 fog_color;\n  float fog_size;\n  float fog_density;\n  float fog_xSpeed;\n  float fog_ySpeed;\n  float fog_amplitude;\n  float fog_sparse;\n};\nfloat random(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233)))*43758.5453123);\n}\nfloat noise(vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n  float a = random(i);\n  float b = random(i+vec2(1.0,0.0));\n  float c = random(i+vec2(0.0,1.0));\n  float d = random(i+vec2(1.0,1.0));\n  vec2 u = f * f * (3.0 - 2.0 * f);\n  return mix(a,b,u.x) + (c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n}\n#define OCTAVES 6.0\nfloat fbm(vec2 st) {\n  float direction = cc_time.x * fog_xSpeed;\n  float vDirection = cc_time.x * fog_ySpeed;\n  float value = 0.0;\n  float amplitude = fog_amplitude;\n  float frequency = 0.;\n  for (float i = 0.0; i<OCTAVES; i++) {\n    frequency = pow(2.0, i);\n    value += noise(vec2((st.x * fog_size + direction * (i + 1.0) * 0.2) * frequency, (st.y * fog_size + vDirection * (i + 1.0) * 0.2) * frequency)) / frequency;\n    amplitude += 1.0/frequency;\n  }\n  value /= amplitude;\n  return clamp(value, 0.0, 1.0);\n}\nvec4 frag () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n  st.x *= (u_resolution.x / u_resolution.y);\n  vec4 color = fog_color;\n  color += fbm(st * fog_sparse) * fog_density;\n  ALPHA_TEST(color);\n  return color;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform highp vec4 cc_time;\nvarying vec2 uv0;\n   uniform vec2 u_resolution;\n    uniform vec4 fog_color;\n    uniform float fog_size;\n    uniform float fog_density;\n    uniform float fog_xSpeed;\n    uniform float fog_ySpeed;\n    uniform float fog_amplitude;\n    uniform float fog_sparse;\nfloat random(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233)))*43758.5453123);\n}\nfloat noise(vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n  float a = random(i);\n  float b = random(i+vec2(1.0,0.0));\n  float c = random(i+vec2(0.0,1.0));\n  float d = random(i+vec2(1.0,1.0));\n  vec2 u = f * f * (3.0 - 2.0 * f);\n  return mix(a,b,u.x) + (c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n}\n#define OCTAVES 6.0\nfloat fbm(vec2 st) {\n  float direction = cc_time.x * fog_xSpeed;\n  float vDirection = cc_time.x * fog_ySpeed;\n  float value = 0.0;\n  float amplitude = fog_amplitude;\n  float frequency = 0.;\n  for (float i = 0.0; i<OCTAVES; i++) {\n    frequency = pow(2.0, i);\n    value += noise(vec2((st.x * fog_size + direction * (i + 1.0) * 0.2) * frequency, (st.y * fog_size + vDirection * (i + 1.0) * 0.2) * frequency)) / frequency;\n    amplitude += 1.0/frequency;\n  }\n  value /= amplitude;\n  return clamp(value, 0.0, 1.0);\n}\nvec4 frag () {\n  vec2 st = gl_FragCoord.xy / u_resolution;\n  st.x *= (u_resolution.x / u_resolution.y);\n  vec4 color = fog_color;\n  color += fbm(st * fog_sparse) * fog_density;\n  ALPHA_TEST(color);\n  return color;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":51}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"}]}],[{"passes":[{"program":"assets/res/2dfog|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"u_resolution":{"type":14,"value":[640,640]},"fog_color":{"type":16},"fog_size":{"type":13,"value":[1]},"fog_density":{"type":13,"value":[1]},"fog_xSpeed":{"type":13,"value":[1]},"fog_ySpeed":{"type":13,"value":[1]},"fog_amplitude":{"type":13,"value":[1]},"fog_sparse":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]],[[{"name":"image-2","rect":{"x":0,"y":0,"width":1024,"height":640},"offset":{"x":0,"y":0},"originalSize":{"width":1024,"height":640},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-512,-320,0,512,-320,0,-512,320,0,512,320,0],"indexes":[0,1,2,2,1,3],"uv":[0,640,1024,640,0,0,1024,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-512,"y":-320,"z":0},"maxPos":{"x":512,"y":320,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[17]],[[{"name":"lock1","rect":{"x":0,"y":0,"width":163,"height":253},"offset":{"x":0,"y":0},"originalSize":{"width":163,"height":253},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-81.5,-126.5,0,81.5,-126.5,0,-81.5,126.5,0,81.5,126.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,253,163,253,0,0,163,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-81.5,"y":-126.5,"z":0},"maxPos":{"x":81.5,"y":126.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[18]],[[{"name":"map","rect":{"x":0,"y":0,"width":544,"height":672},"offset":{"x":0,"y":0},"originalSize":{"width":544,"height":672},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-272,-336,0,272,-336,0,-272,336,0,272,336,0],"indexes":[0,1,2,2,1,3],"uv":[0,672,544,672,0,0,544,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-272,"y":-336,"z":0},"maxPos":{"x":272,"y":336,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[19]],[[{"name":"image-1","rect":{"x":0,"y":0,"width":640,"height":1024},"offset":{"x":0,"y":0},"originalSize":{"width":640,"height":1024},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-320,-512,0,320,-512,0,-320,512,0,320,512,0],"indexes":[0,1,2,2,1,3],"uv":[0,1024,640,1024,0,0,640,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-320,"y":-512,"z":0},"maxPos":{"x":320,"y":512,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[20]],[[[59,"2dfog",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALPHA_TEST":true}],[[[{"fog_density":0.8,"fog_xSpeed":0.2,"fog_ySpeed":0.1,"fog_sparse":3},"u_resolution",8,[0,960,640],"fog_color",8,[4,5263440]]],11]]],0,0,[0],[23],[21]],[[{"name":"mapMask","rect":{"x":0,"y":0,"width":354,"height":421},"offset":{"x":0,"y":0},"originalSize":{"width":354,"height":421},"rotated":false,"capInsets":[158,207,158,210],"vertices":{"rawPosition":[-177,-210.5,0,177,-210.5,0,-177,210.5,0,177,210.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,421,354,421,0,0,354,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-177,"y":-210.5,"z":0},"maxPos":{"x":177,"y":210.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[22]],[[{"name":"frameBorder","rect":{"x":0,"y":0,"width":397,"height":407},"offset":{"x":0,"y":0},"originalSize":{"width":397,"height":407},"rotated":false,"capInsets":[191,197,192,196],"vertices":{"rawPosition":[-198.5,-203.5,0,198.5,-203.5,0,-198.5,203.5,0,198.5,203.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,407,397,407,0,0,397,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-198.5,"y":-203.5,"z":0},"maxPos":{"x":198.5,"y":203.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[1],0,[0],[2],[23]]]]
